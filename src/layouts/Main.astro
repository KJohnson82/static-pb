---
 // Importing global CSS styles
import { ViewTransitions } from "astro:transitions"; // Importing ViewTransitions for page transition effects
import "../styles/global.css"; // Importing global CSS styles
import TitleBar from "../components/TitleBar.astro";



type Props = {
  title: string; // Prop for the page title
};

// Extracting the title from Astro's props
const { title } = Astro.props;



---

<!doctype html>
<html lang="en" data-theme="business">
  <head>
    <!-- Links to stylesheets, fonts, and other head elements -->
    <link rel="stylesheet" href="src/styles/global.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&family=Poppins:wght@500&display=swap"
      rel="stylesheet"
    />

    
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"
    />
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA:Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="McElroy Employee Directory" />
    <link href="/pagefind/pagefind-ui.css" rel="stylesheet" />
		<script src="/pagefind/pagefind-ui.js" type="text/javascript"></script>
    <title>{title}</title>
    <!-- Dynamic title -->
    <ViewTransitions />
    <!-- Page transition component -->
  </head>
  <body>
    
    
    <div class="wrap bg-transparent" id="wrap">
      <!-- Main content area -->
      <main
        class=" my-0 py-0 px-0 mx-0 box-border= w-lvw h-lvh box-decoration-clone bg-gradient-to-bl from-cyan-600 to-blue-600 text-primary-content rounded-md "
      >
      <div class=" pb-6 bg-purple-300 ">
        <TitleBar title={title} />
      </div>
        <slot />
        <!-- Slot for inserting child content -->
        
      </main>
    </div>
  </body>
  <style>
    
    .material-symbols-outlined {
      font-variation-settings:
        "FILL" 0,
        "wght" 400,
        "GRAD" 0,
        "opsz" 24;
    }
  </style>
</html>

<script>
  import { appWindow } from "@tauri-apps/api/window";
  import { currentMonitor } from '@tauri-apps/api/window';
  import { primaryMonitor } from '@tauri-apps/api/window';

  document.addEventListener('click', function(event) {
  // Ensure the event target is an Element before proceeding
  if (!(event.target instanceof Element)) return;

  if (event.target.closest('#titlebar-minimize')) {
    appWindow.minimize();
  } else if (event.target.closest('#titlebar-close')) {
    appWindow.close();
  }
  // Handle other buttons as needed
});

async function adjustWindowSize() {
  const monitor = await currentMonitor();
  if (monitor && monitor.size) {
    const monitorWidth = monitor.size.width;
    const monitorHeight = monitor.size.height;

    // Set the window size to 80% of the monitor size using LogicalSize
    const windowWidth = monitorWidth * 0.2;
    const windowHeight = monitorHeight * 0.75;

    // Define the size object with 'type' as 'Logical'
    const size = {
      type: 'Logical', // Specify the size type here
      width: windowWidth,
      height: windowHeight
    };

    await appWindow.setSize(size);
  }
}
adjustWindowSize(); 
// document.querySelector('.titlebar').addEventListener('click', event => {
// const target = event.target as Element;
// if (target.closest('#titlebar-minimize')) {
// appWindow.minimize();
// } else if (target.closest('#titlebar-close')) {
// appWindow.close();
// }

// });
</script>