---
import Data from '../../../data/Data.json';
import Main from '../../../layouts/Main.astro';
import CorpHeadCard from '../../../components/CorpHeadCard.astro';
import Footer from '../../../components/Footer.astro';
import { Icon } from 'astro-icon/components';
import NavBar from '../../../components/NavBar.astro';
import DeptHeadCard from '../../../components/DeptHeadCard.astro';
import PlantHeadCard from '../../../components/PlantHeadCard.astro';

export async function getStaticPaths() {
    // Assuming 'Data' has a structure where each location has multiple departments
    const locations = Data.loctype.plant.locations;
    const departments = locations.flatMap(location => location.departments);
    // Flatten the nested structure and create an array of path objects
    const paths = locations.flatMap(location =>
        location.departments.map(department => ({
            params: {
                locationID: location.id.toString(),
                departmentID: department.id.toString(),
            },
            props: {
                employees: department.employees,
            },
        }))
    );
    return paths;
}



const { departmentID, locationID, } = Astro.params;
const { employees } = Astro.props;
const departments= Data.loctype.plant.locations.flatMap(locations => locations.departments);
const department = departments.find(dept => dept.id.toString() === departmentID.toString());
if (!department) {
  return Astro.redirect('/404');
}
---

<Main title={department.deptName}>
  <div class="flex flex-col h-screen">
    <section class="  ">
      <!-- {/* Render the corporate header card with relevant information */} -->
      <DeptHeadCard 
        headCard={[
          {
            title: `${department.deptName}`, // Title of the card
            subtitle1: "Dept. Phone",
            address: "", // Address line
            city: "", // City
            state: "", // State
            zip: "", // ZIP code
            subtitle2: "Dept. Fax",
            phone: "(888) 555-5555", // Phone number
            email: "info@info.com", // Email address
            subtitle3: "", // Third subtitle
            phone2: "", // Second phone number
          },
        ]}
      />
    </section>
    <div class="divide divide-none divide-y-2 py-0"></div>
    <section
    class="flex-grow bg-gradient-to-t from-gray-300 to-slate-200  pb-0 pt-0 no-scrollbar overflow-y-scroll overscroll-contain scroll-auto scroll-mx-px bg-inherit" 
      >
      <section class="shadow-sm drop-shadow-sm">
        <NavBar />
      </section>
    <div class=" ps-2 py-1 pe-2 border-4 border-transparent overflow-y-auto no-scrollbar">
      <ul class="mt-4 ms-0.5">
        {department.employees.map(employee => (
          // <li  class="relative bg-secondary rounded-md text-nowrap  shadow-md  my-2 py-0 mx-0 transition ease-in duration-150 transform hover:-translate-y-1 hover:scale-100 ">
          //   <a href={`/plant/${locationID}/${departmentID}/${employee.id}`} class="block px-4 truncate hover:bg-[#0d9488] py-4 text-white rounded-lg hover:rounded-md hover:border-transparent hover:text-white transition-colors"  >
          //     <div class=" hover-trigger items-center place-items-center text-base font-medium tracking-wider text-white mb-0.5 -px-4 p-0 capitalize align-middle" >
          //         <!-- Places a star beside employees who are managers -->
          //     {employee.isManager === 1 ? <Icon name="star" class="inline-block pe-2 h-6 w-auto"/> : ""} 
          //     {employee.firstName + " " + employee.lastName + " - " + employee.jobTitle + " "}
          //       </div>
          //   </a>
          // </li>
          <li class="relative bg-secondary rounded-md shadow-md my-2 py-0 mx-0 transition ease-in duration-150 transform hover:-translate-y-1 hover:scale-100 " >
            <a href={`/plant/${locationID}/${departmentID}/${employee.id}`} class="block px-4 leading-tight overflow-hidden hover:bg-[#0d9488] py-2 text-white rounded-lg hover:rounded-md hover:border-transparent hover:text-white transition-colors" >
              <div class=" hover-trigger line-clamp-1 items-center place-items-center text-lg text-nowrap overflow-visible font-medium tracking-wider text-white mb-0 -px-4 p-0 capitalize  " >
                  <!-- Places a star beside employees who are managers -->
              
              {employee.firstName + " " + employee.lastName } 
              {employee.isManager === 1 ? <Icon name="star" class="inline-block pe-2 h-6 w-auto"/> : ""} 

                </div>
                <div class=" hover-trigger items-center place-items-center text-nowrap overflow-visible tracking-wider line-clamp-1">
                  {employee.jobTitle}
                </div>
            </a>
          </li>
        ))}
      </ul>
    </div>  
    </section>
    <div class=" divide divide-none divide-y-2 py-0 "></div>
    <section class="box-border pb-3 mt-0">
      <!-- {/* Render the footer with navigation links */} -->
      <Footer
        bottomNav={[
          { icon: "home", label: "Home", to: "/" },
          { icon: "corporate", label: "Corporate", to: "/corporate" },
          { icon: "store", label: "Metal Mart", to: "/metalmart" },
          {
            icon: "service_center",
            label: "Service Center",
            to: "/servicecenter",
          },
          // { icon: "plant", label: "Plant", to: "/plant" },
        ]}
      />
    </section>
  </div>
</Main>

<style>

    li:nth-child(odd) {
    background-color: #1c658c;
  }
  li:nth-child(even) {
    background-color: #398AB9;
  }
    .hover-trigger:hover {
      animation: scroll-text 3s linear 1s forwards ;
    }

    @keyframes scroll-text {
      20% { transform: translateX(0); }
      100% { transform: translateX(-60%); }
    }

     /* Hide scrollbar for Chrome, Safari and Opera */
  .no-scrollbar::-webkit-scrollbar {
      display: none;
  }
 /* Hide scrollbar for IE, Edge and Firefox */
  .no-scrollbar {
      -ms-overflow-style: none;  /* IE and Edge */
      scrollbar-width: none;  /* Firefox */
}

</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
const elements = document.querySelectorAll('.hover-target');

elements.forEach(el => {
  if (el.scrollWidth > el.clientWidth) {
    el.classList.add('scroll-on-hover');
  }
});
});
</script>