---
// Define the type for the component's props
type UserProps = {
  firstName: string;
  lastName: string;
  phoneNumber: string;
  email: string;
  jobTitle: string;
  extension: string;
  cellNumber: string;
};

// Extract the props and cast them to the UserProps type
const {
  firstName,
  lastName,
  phoneNumber,
  email,
  jobTitle,
  extension,
  cellNumber,
} = Astro.props as UserProps;

const userName = `${firstName} ${lastName}`;
---

<section
  class="mx-4 my-4 flex-auto resize-none no-scrollbar overflow-y-scroll overscroll-contain scroll-auto"
>
  <div
    class="min-h-[26rem] max-h-[28rem] pb-5 pt-5 py-1 rounded-2xl bg-neutral border-4 border-secondary shadow-sm"
  >
    <!-- {/* Conditionally render user name and job title */} -->
    <div id="name-title" class="sm:text-xl md:text-2xl lg:text-3xl line-clamp-2 ps-2 pe-2 ">
      {
        userName !== "" ? (
          <h1
            id="user-name"
            class=" font-semibold tracking-wide text-center uppercase"
          >
            {userName}
          </h1>
        ) : null
      }
    </div>

    <div class="mx-4 sm:text-lg md:text-xl lg:text-2xl py-1 line-clamp-1 ">
      {
        jobTitle !== "" ? (
          <h2 class="-mt-0.5 tracking-widest text-center uppercase font-semibold ps-1">
            {jobTitle}
          </h2>
        ) : null
      }
    </div>

    <div class="divider divider-info m-0"></div>

    <section class="mt-4">
      <div class="ms-5">
        {
          phoneNumber !== "" ? (
            <>
              <p class="cat-name uppercase tracking-wide font-semibold -mb-2">
                Phone Number
              </p>
              <div class="divider divider-info m-0" />
              <p class="text-md uppercase tracking-wide text-base-content font-semibold ps-0 pb-4 -mt-0.5">
                {phoneNumber} {extension !== "" ? `| Ext: ${extension}` : null}
              </p>
            </>
          ) : null
        }
      </div>

      <div class="ms-5">
        <!-- {/* Conditionally render cell number */} -->
        {
          cellNumber !== "" ? (
            <>
              <p class="cat-name uppercase tracking-wide font-semibold -mb-2">
                Cell Number
              </p>
              <div class="divider divider-info m-0" />
              <p class="text-md text-base-content tracking-wide uppercase font-semibold pb-4 -mt-0.5">
                {cellNumber}
              </p>
            </>
          ) : null
        }
      </div>

      <div class="ms-5">
        <!-- {/* Conditionally render email */} -->
        {
          email !== "" ? (
            <>
              <p class="cat-name uppercase tracking-wide font-semibold -mb-2">Email</p>
              <div class="divider divider-info m-0" />
              <p class="text-md text-base-content tracking-wide text-lg font-semibold pb-4 -mt-1 ">
                {email}
              </p>
            </>
          ) : null
        }
      </div>
    </section>
  </div>
</section>
<!-- // Render the user card -->

<style>
  #user-name {
    /* font-size: clamp(20px, 26px, 28px); */
    overflow: visible;
    word-break: keep-all;
  }

  h2 {
    /* font-size: clamp(18px, 22px, 24px); */
    overflow: visible;
    
  }

  /* #cat-name {
    font-size: clamp(12px, 15px, 18px);
    overflow: visible;
    white-space: nowrap;
  } */
</style>

<script>
  // window.onload = function () {
  //   const userNameElement = document.getElementById("user-name");
  // const userNameWidth = userNameElement.offsetWidth;

  // userNameElement.parentElement.style.width = `${userNameWidth}px`;
  // }

  // JavaScript function to bold the "Ext:" text in phone numbers
  // window.onload = function () {
  //   const elements = document.querySelectorAll("p");

  //   elements.forEach((element) => {
  //     if (element.textContent && element.textContent.includes("Ext:")) {
  //       element.innerHTML = element.innerHTML.replace(
  //         "Ext:",
  //         "<strong>Ext:</strong>"
  //       );
  //     }
  //   });
  // };
</script>
