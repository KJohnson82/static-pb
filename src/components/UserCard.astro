---


// Define the type for the component's props
type UserProps = {
  firstName: string;
  lastName: string;
  phoneNumber: string;
  email: string;
  jobTitle: string;
  extension: string;
  cellNumber: string;
};

// Extract the props and cast them to the UserProps type
const {
  firstName,
  lastName,
  phoneNumber,
  email,
  jobTitle,
  extension,
  cellNumber,
} = Astro.props as UserProps;

const userName = `${firstName} ${lastName}`;
---

<section
  class="mx-3 my-2 prose flex-auto resize-none no-scrollbar overflow-y-scroll overscroll-contain scroll-auto"
>
  <div data-pagefind-body
  class="user-card card mx-1 min-h-[28.5rem] max-h-[29.5rem] w-[21.5rem] m-1 mt-1.5 rounded-2xl bg-neutral border-[6px] border-secondary shadow-sm"
  >
  <section class=" px-1 py-0 ">
    <div id="name-title" >
      {
        userName !== "" ? (
          <h2
            id="user-name"
            class=" font-medium tracking-wide text-center uppercase  "
          >
            {userName}
          </h2>
        ) : null
      }
    </div>

    <div class="mx-4 ">
      {
        jobTitle !== "" ? (
          <h4 class=" tracking-widest text-center uppercase font-normal ps-1 sm:pb-4 md:pb-5 lg:pb-6 ">
            {jobTitle}
          </h4>
        ) : null
      }
    </div>

  </section>
    <!-- {/* Conditionally render user name and job title */} -->
    

    <div class="divider divider-info m-0 mt-0"></div>

    

    <section class="mt-3">
      <div class="ms-5">
        {
          phoneNumber !== "" ? (
            <>
              <p class="cat-name uppercase tracking-wide font-semibold -mb-2">
                Phone Number
              </p>
              <div class="divider divider-info m-0" />
              <p class="text-base uppercase tracking-wide text-base-content font-normal ps-0 pb-2 -mt-0.5">
                {phoneNumber} {extension !== "" ? `| Ext: ${extension}` : null}
              </p>
            </>
          ) : null
        }
      </div>

      <div class="ms-5">
        <!-- {/* Conditionally render cell number */} -->
        {
          cellNumber !== "" ? (
            <>
              <p class="cat-name uppercase tracking-wide font-semibold -mb-2">
                Cell Number
              </p>
              <div class="divider divider-info m-0" />
              <p class="text-base text-base-content tracking-wide uppercase font-normal pb-2 -mt-0.5">
                {cellNumber}
              </p>
            </>
          ) : null
        }
      </div>

      <div class="ms-5">
        <!-- {/* Conditionally render email */} -->
        {
          email !== "" ? (
            <>
              <p class="cat-name uppercase tracking-wide font-semibold -mb-2">Email</p>
              <div class="divider divider-info m-0" />
              <p class="text-base sm:text-xs md:text-base lg:text-xl text-base-content tracking-wider lowercase font-normal pb-2 -mt-0.5 ">
                {email}
              </p>
            </>
          ) : null
        }
      </div>
    </section>
    
  </div>

</section>

<!-- // Render the user card -->

<style>
  #user-name {
    /* font-size: clamp(20px, 26px, 28px); */
    overflow: visible;
    word-break: keep-all;
  }


  h2 {
    /* font-size: clamp(18px, 22px, 24px); */
    overflow: visible;
    padding-top: 0;
    margin-top: 25px; 
    margin-bottom: 0;
    
  }

  h4 {
    padding-top: 0;
    margin-top: 10px;
  }



  /* #cat-name {
    font-size: clamp(12px, 15px, 18px);
    overflow: visible;
    white-space: nowrap;
  } */
</style>

<script>
  // window.onload = function () {
  //   const userNameElement = document.getElementById("user-name");
  // const userNameWidth = userNameElement.offsetWidth;

  // userNameElement.parentElement.style.width = `${userNameWidth}px`;
  // }

  // JavaScript function to bold the "Ext:" text in phone numbers
  // window.onload = function () {
  //   const elements = document.querySelectorAll("p");

  //   elements.forEach((element) => {
  //     if (element.textContent && element.textContent.includes("Ext:")) {
  //       element.innerHTML = element.innerHTML.replace(
  //         "Ext:",
  //         "<strong>Ext:</strong>"
  //       );
  //     }
  //   });
  // };
</script>
