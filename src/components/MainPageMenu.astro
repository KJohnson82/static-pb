---
import { Icon } from 'astro-icon/components';

// Define the type for individual location items
type LocType = {
  to: string; // URL or path the item will link to
  location: string; // Text to display for the location
  desc: string; // Additional description or class names for styling
  icon: string; // Icon name for the item
};

// Define the type for the component's props
export type Props = {
  loctypes: LocType[]; // Array of location types
};

let { loctypes } = Astro.props as Props;
---

<!-- Grid container for location types -->
<div class="grid grid-cols-1 gap-5 grid-rows-4 w-full my-2 mx-1  ">
  <!-- Map over each location type to create a link and button -->
  {
    loctypes.map(({ to, location, desc, icon }) => (
      <a
        href={to}
        class="rounded-xl inline-table z-auto my-1 py-2 overflow-hidden border-2 relative shadow-md hover:text-white hover:border-slate-200 transition ease-in duration-200 transform hover:-translate-y-1 hover:scale-105 active:translate-y-0 active:scale-95 opacity-90 hover:opacity-100"
      >
        <button class={desc} type="button">
          <span class="grid grid-cols-2 w-full gap-3 items-center border-transparent text-left text-nowrap hover:border-hidden ">
            <h2 class=" w-auto col-span-1 text-white justify-self-start text-xl uppercase font-semibold tracking-widest">
              {location}
            </h2>
            <Icon name={icon} class="w-auto col-span-1 h-10 justify-self-end " />
          </span>
        </button>
      </a>
    ))
  }
</div>

<style>
  /* a button {
    position: relative;
    display: inline-table;
    margin-top: auto;
    margin-bottom: auto;
    padding-top: auto;
    padding-bottom: auto;
    background-color: transparent;
  } */
</style>
